/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.Order.OrderItem;
import Business.Payment.Payment.TypeofStatus;
import UserInterface.PaymentJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alex
 */
public class ManageCustomerOrderJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private OrderDirectory orderDirectory;
    //private Customer customer;

    /**
     * Creates new form ManageCustomerOrderJPanel
     */
    public ManageCustomerOrderJPanel(JPanel userProcessContainer, OrderDirectory orderDirectory) {
        initComponents();
        //this.customer = customer;
        this.orderDirectory = orderDirectory;
        this.userProcessContainer = userProcessContainer;
        tblOrder.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = tblOrder.getSelectedRow();
                if (selectedRow >= 0) {
                    Order o = (Order) tblOrder.getValueAt(selectedRow, 0);
                    populateOrderItem(o);
                }
            }
        });
        populateOrder();
    }

    public void populateOrder() {
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        model.setRowCount(0);
        for (Order o : orderDirectory.getOrderList()) {
            Object[] row = new Object[7];
            row[0] = o;
            row[1] = o.getRestaurant().getName();
            row[2] = o.getPayment().getStatus();
            row[3] = o.getTicket();
            row[4] = o.isIsConsumed() ? "Used" : "Unused";
            row[5] = o.getConsumeTimeStamp();
            model.addRow(row);
        }
    }

    public void populateOrderItem(Order o) {
        DefaultTableModel model = (DefaultTableModel) tblOrderItem.getModel();
        model.setRowCount(0);
        for (OrderItem oi : o.getOrderItemList()) {
            Object[] row = new Object[2];
            row[0] = oi.getDish().getName();
            row[1] = oi.getQuantity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderItem = new javax.swing.JTable();
        btPay = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Restaurant", "Payment Status", "Ticket", "Status", "Consume Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrder);

        tblOrderItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dishes", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrderItem);

        btPay.setText("Pay This Order");
        btPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btPay)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btPay)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPayActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow >= 0) {
            Order o = (Order) tblOrder.getValueAt(selectedRow, 0);
            if (!o.getPayment().getStatus().equals(TypeofStatus.Unpaid)) {
                JOptionPane.showMessageDialog(null, "This order was paid already.");
                return;
            }
            PaymentJPanel addUserAccountJPanel = new PaymentJPanel(userProcessContainer, o.getPayment(), this);
            userProcessContainer.add("PaymentJPanel", addUserAccountJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select an order");
        }
    }//GEN-LAST:event_btPayActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTable tblOrderItem;
    // End of variables declaration//GEN-END:variables
}
