/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Business;
import Business.Cart.Cart;
import Business.Cart.CartItem;
import Business.Cart.CartItemUnit;
import Business.Menu.Dish;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.Order.OrderItem;
import Business.Organization.Organization;
import Business.Payment.Payment;
import Business.User.Customer;
import Business.UserAccount.UserAccount;
import DataManagement.DatabaseFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alex
 */
public class CartJPanel extends javax.swing.JPanel {

    private Cart cart;
    private JPanel userProcessContainer;
    private OrderDirectory orderDirectory;
    private Customer customer;
    private Business business;

    /**
     * Creates new form CartJPanel
     */
    public CartJPanel(JPanel userProcessContainer, OrderDirectory orderDirectory, Customer customer) {
        initComponents();
        this.business = Business.getInstance();
        this.customer = customer;
        this.cart = customer.getCart();
        this.userProcessContainer = userProcessContainer;
        this.orderDirectory = orderDirectory;
        tblCart.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = tblCart.getSelectedRow();
                if (selectedRow >= 0) {
                    CartItem ci = (CartItem) tblCart.getValueAt(selectedRow, 0);
                    populateCartItem(ci);
                } else {
                    ((DefaultTableModel) tblCartItem.getModel()).setRowCount(0);
                }
            }
        });
        populateCart();
    }

    public void populateCart() {
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        model.setRowCount(0);
        for (CartItem ci : cart.getCartItemList()) {
            Object[] row = new Object[2];
            row[0] = ci;
            row[1] = ci.getRestaurant().getName();
            model.addRow(row);
        }
    }

    public void populateCartItem(CartItem ci) {
        DefaultTableModel model = (DefaultTableModel) tblCartItem.getModel();
        model.setRowCount(0);
        for (CartItemUnit ciu : ci.getDishList()) {
            Object[] row = new Object[2];
            row[0] = ciu;
            row[1] = ciu.getQuantity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCartItem = new javax.swing.JTable();
        btCheckOut = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Restaurant"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCart);

        tblCartItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dish Name", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(tblCartItem);

        btCheckOut.setText("Check Out This Restaurant");
        btCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btCheckOut)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(btCheckOut)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckOutActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCart.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a cart item");
            return;
        }
        CartItem ci = (CartItem) tblCart.getValueAt(selectedRow, 0);
        Order newOrder = orderDirectory.addOrder(ci.getRestaurant());
        business.getOrderDirectory().getOrderList().add(newOrder);
        newOrder.setCustomer(customer);

        for (CartItemUnit ciu : ci.getDishList()) {
            OrderItem oi = newOrder.addOrderItem();
            oi.setDish(ciu.getDish());
            oi.setQuantity(ciu.getQuantity());
        }

        newOrder.generatePayment();

        cart.getCartItemList().remove(ci);
        DatabaseFactory.getInstance().storeSystem();
        JOptionPane.showMessageDialog(null, "Order Placed.");
        populateCart();
    }//GEN-LAST:event_btCheckOutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCheckOut;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblCartItem;
    // End of variables declaration//GEN-END:variables
}
